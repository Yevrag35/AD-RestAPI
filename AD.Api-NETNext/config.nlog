<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
	  throwConfigExceptions="true">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Extensions.Logging"/>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<time type="FastUTC" />
	
	<!-- the targets to write to -->
	<targets async="true">
		<!-- File target for all log messages with basic details -->
		<target xsi:type="File" name="allFile" fileName="Logs\web.log"
				createDirs="true"
				deleteOldFileOnStartup="true"
				encoding="utf-8"
				keepFileOpen="false"
				archiveNumbering="DateAndSequence"
				archiveAboveSize="500000"
				maxArchiveFiles="4"
				writeBom="true"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${aspnet-traceidentifier}|${logger}|${message} ${exception:format=tostring}" />
		
		<!-- File target for critical log messages with full details -->
		<target xsi:type="File" name="extFile-web" fileName="Logs\web-ext.log"
				createDirs="true"
				deleteOldFileOnStartup="true"
				encoding="utf-8"
				keepFileOpen="false"
				archiveNumbering="DateAndSequence"
				archiveAboveSize="500000"
				maxArchiveFiles="4"
				writeBom="true"
				layout="${longdate}|${level:uppercase=true}|${aspnet-traceidentifier}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${logger}|${message} ${exception:format=tostring}" />

		<target xsi:type="File" name="apiRequests" fileName="Logs\web-requests.log"
				createDirs="true"
				deleteOldFileOnStartup="true"
				encoding="utf-8"
				keepFileOpen="false"
				archiveNumbering="DateAndSequence"
				archiveAboveSize="500000"
				maxArchiveFiles="4"
				writeBom="true"
				layout="${longdate}|${aspnet-traceidentifier}|URL: ${aspnet-request-url}|IP: ${aspnet-request-ip}|USER: ${aspnet-user-identity:whenEmpty=Anonymous}|STATUS: ${aspnet-response-statuscode}|${message}" />
		
		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>
	
	<!-- rules to map from logger name to target -->
	<rules>
		<!-- All logs, including from MS -->
		<logger name="*" minlevel="Debug" writeTo="allFile" />
		
		<!-- Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, extFile-web" final="true" />
		
		<!-- Skip non-critcial MS logs and so log only AD.API-specific logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
		<logger name="AD.Api.Middleware.RequestLoggerMiddleware" maxlevel="Info" writeTo="apiRequests" final="true" />

		<logger name="*" minlevel="Debug" writeTo="extFile-web" />
	</rules>
</nlog>